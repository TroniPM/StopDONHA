package ui;

import java.util.Timer;
import java.util.TimerTask;
import javax.swing.table.DefaultTableModel;
import entidades.network.DataNetworkManager;
import java.awt.Dimension;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import util.Session;

/**
 *
 * @author PMateus <paulomatew@gmailcom>
 */
public class GameScreenValidation extends javax.swing.JPanel {

    private int currentIndex = 0;
    private Timer handlerChecker = new Timer();

    public void threadChecker() {
        TimerTask tarefa = new TimerTask() {
            @Override
            public void run() {
                if (!Session.isServidor) {
                    if (Session.canValidateRespostas) {
                        Session.canValidateRespostas = false;
                        Session.JFramePrincipal.changeScreen(new GameScreenValidation());
                    } else if (Session.canShowHighScores) {
                        Session.canShowHighScores = false;
                        Session.JFramePrincipal.changeScreen(new HighScore());
                    } else if (Session.canStartGame) {
                        Session.canStartGame = false;
                        Session.JFramePrincipal.changeScreen(new GameScreen());
                    }
                }
            }

        };
        handlerChecker.scheduleAtFixedRate(tarefa, 0, 100);
    }

    public class ValidationTableModel extends DefaultTableModel {

        public ValidationTableModel() {
            super(new String[]{"Item", "Resposta", "Aceitar"}, 0);
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            Class clazz = String.class;
            switch (columnIndex) {
                case 0:
                    clazz = Integer.class;
                    break;
                case 2:
                    clazz = Boolean.class;
                    break;
            }
            return clazz;
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return column == 2;
        }

        @Override
        public void setValueAt(Object aValue, int row, int column) {
            if (aValue instanceof Boolean && column == 2) {
                Vector rowData = (Vector) getDataVector().get(row);
                rowData.set(2, (boolean) aValue);
                fireTableCellUpdated(row, column);

                DataNetworkManager.respostasRecebidasDoRound.get(currentIndex).objResposta.respostasAceitacao.set(row, (boolean) aValue);
            }
        }

    }

    public void preencherTabela() {
        //Preenchendo tabela de validação
        ValidationTableModel model = new ValidationTableModel();

        jButtonAntPlayer.setEnabled(true);
        jButtonProxPlayer.setEnabled(true);

        if (currentIndex <= 0) {
            currentIndex = 0;
            jButtonAntPlayer.setEnabled(false);
        } else if (currentIndex >= DataNetworkManager.respostasRecebidasDoRound.size() - 1) {
            currentIndex = DataNetworkManager.respostasRecebidasDoRound.size() - 1;
            jButtonProxPlayer.setEnabled(false);
        }

        jButtonProxPlayer.setEnabled(true);
        if (currentIndex == DataNetworkManager.respostasRecebidasDoRound.size() - 1) {
            jButtonProxPlayer.setEnabled(false);
        }
        System.out.println("GameScreenValidation() -  preencherTabela() - ip do avaliado: " + DataNetworkManager.respostasRecebidasDoRound.get(currentIndex).ip);

        for (int j = 0; j < DataNetworkManager.respostasRecebidasDoRound.get(currentIndex).objResposta.respostas.size(); j++) {
            model.addRow(new Object[]{
                Session.gRunTime.itens.get(j),
                DataNetworkManager.respostasRecebidasDoRound.get(currentIndex).objResposta.respostas.get(j),
                DataNetworkManager.respostasRecebidasDoRound.get(currentIndex).objResposta.respostasAceitacao.get(j)});
        }

        jTable1.setModel(model);
    }

    /**
     * Creates new form GameScreenShowScore
     */
    public GameScreenValidation() {//ArrayList<RoundDataToValidate> respostasToValidate
        initComponents();
        Session.JFramePrincipal.changeTitleText("Validando respostas");
        preencherTabela();

        threadChecker();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonProxPlayer = new javax.swing.JButton();
        jButtonFinish = new javax.swing.JButton();
        jButtonAntPlayer = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(400, 300));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bella Donna", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 102));
        jLabel1.setText("Validando respostas...");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 190, 30));

        jButton1.setText("Sair do JOGO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, -1, -1));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 310, 270));

        jButtonProxPlayer.setText("Próximo JOGADOR >");
        jButtonProxPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProxPlayerActionPerformed(evt);
            }
        });
        add(jButtonProxPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, -1, -1));

        jButtonFinish.setText("Encerrar Validação");
        jButtonFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinishActionPerformed(evt);
            }
        });
        add(jButtonFinish, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, -1, -1));

        jButtonAntPlayer.setText("< JOGADOR Anterior");
        jButtonAntPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAntPlayerActionPerformed(evt);
            }
        });
        add(jButtonAntPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, -1, -1));

        jButton2.setText("LOGS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 440, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tela.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Session.clearAllData();

        Session.JFramePrincipal.changeScreen(new MainMenu());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinishActionPerformed

        jTable1.setEnabled(false);
        jButtonProxPlayer.setEnabled(false);
        jButtonAntPlayer.setEnabled(false);
        jButtonFinish.setEnabled(false);
        jButtonFinish.setText("Aguarde...");

        jLabel1.setText(jLabel1.getText() + " Aguarde os outros jogadores.");

        if (Session.isServidor) {
            DataNetworkManager.respostasRecebidasValidated.add(DataNetworkManager.cl_calculateScore());
            Session.JFramePrincipal.changeScreen(new GameScreenWaitingRoomPosValidation());
        } else {
            Session.conexaoCliente.communicateDataValidated(DataNetworkManager.cl_calculateScore());
            Session.JFramePrincipal.changeScreen(new GameScreenWaitingRoomPosValidation());
        }
    }//GEN-LAST:event_jButtonFinishActionPerformed

    private void jButtonProxPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProxPlayerActionPerformed
        currentIndex++;
        preencherTabela();
    }//GEN-LAST:event_jButtonProxPlayerActionPerformed

    private void jButtonAntPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAntPlayerActionPerformed
        currentIndex--;
        preencherTabela();
    }//GEN-LAST:event_jButtonAntPlayerActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JTextArea textArea = new JTextArea(Session.getLog());
        textArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(textArea);
        scrollPane.setPreferredSize(new Dimension(500, 500));
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        JOptionPane.showMessageDialog(null, scrollPane, "Logs",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAntPlayer;
    private javax.swing.JButton jButtonFinish;
    private javax.swing.JButton jButtonProxPlayer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
